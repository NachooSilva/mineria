# -*- coding: utf-8 -*-
"""Examen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m5gK81DZFPzaD-S2Fg7nZAT8wqSK8uka
"""

from google.colab import files
import io
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb
import numpy as np
import pandas as pd
from scipy.cluster.hierarchy import dendrogram, linkage
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

archivos_subidos = files.upload()
input_dataset = pd.read_csv(io.BytesIO(archivos_subidos['weatherAUS.csv']))

input_dataset

filtered_data = input_dataset[['Temp3pm', 'WindSpeed3pm', 'RainToday','Date']]
filtered_data

filtered_data['Date'] = pd.to_datetime(filtered_data['Date'])
filtro = ((filtered_data['Date'].dt.month >= 12) | (filtered_data['Date'].dt.month < 3))
df_filtrado = filtered_data[filtro]
df_filtrado

data_encoded = pd.get_dummies(df_filtrado, columns=['RainToday'])
data_encoded['RainToday'] = data_encoded['RainToday_Yes'].combine_first(data_encoded['RainToday_No'])
data_encoded.drop(['RainToday_Yes', 'RainToday_No'], axis=1, inplace=True)

filtro = data_encoded[['Temp3pm', 'WindSpeed3pm','RainToday']]
# Reemplazar los valores no finitos por NaN
filtro.replace([np.inf, -np.inf], np.nan, inplace=True)
# Redondear y convertir a enteros
filtro['Temp3pm'] = filtro['Temp3pm'].round().astype('Int64')
filtro['WindSpeed3pm'] = filtro['WindSpeed3pm'].round().astype('Int64')
filtro

# Eliminar filas con valores NaN
filtro.dropna(inplace=True)
filtro

link=linkage(filtro, method='ward')
dend = dendrogram(link)
dend